upstream mediadb-json {
  server localhost:3000;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name stream.test;
  set $base /var/www;
  root $base/html;

  # index.html
  index index.html;

  # security
  include config/security.conf;

  # vod settings
  vod_mode mapped;
  vod_upstream_location /json;

  vod_last_modified 'Sun, 19 Nov 2000 08:52:00 GMT';
  vod_last_modified_types *;
  vod_expires 100d;
  vod_expires_live 30;
  vod_expires_live_time_dependent 3;
  vod_align_segments_to_key_frames on;
  vod_output_buffer_pool 64k 32;

  # vod path
  vod_base_url "https://stream.test";
  vod_segments_base_url "https://stream.test";

  # vod caches
  vod_metadata_cache metadata_cache 4096m;
  vod_response_cache response_cache 256m;
  vod_mapping_cache mapping_cache 128m;
  vod_performance_counters perf_counters;

  # vod security
  vod_secret_key "ukr3or6tknb2m1lw-$vod_filepath";

  secure_token_encrypt_uri on;
  secure_token_encrypt_uri_key 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f;
  secure_token_encrypt_uri_iv 00000000000000000000000000000000;
  secure_token_encrypt_uri_part $1;
  secure_token_types application/dash+xml video/mpd image/jpg image/jpeg;

  # file handle caching / aio
  aio threads;

  # vod status page
  location / {
    vod_status;
  }

  # nginx status page
  location /nginx {
    stub_status on;
  }

  # upstream vod flavors
  location ~ /json/[^/]+/(.*) {
    internal;
    proxy_pass https://mediadb-api/$1;
    #proxy_pass http://mediadb-api/$1; # Laravel Sail
    include config/proxy.conf;
  }

  # dash
  location ~ ^/dash/(.*) {
    vod dash;
    vod_segment_duration 4000;
    vod_dash_manifest_format segmentlist;
    vod_manifest_duration_policy min;

    # cors
    include config/cors.conf;
  }

  # thumb
  location ~ ^/thumb/(.*) {
    vod thumb;

    # cors
    include config/cors.conf;
  }

  # additional config
  include config/general.conf;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name *.stream.test;

  return 301 https://stream.test$request_uri;
}

server {
  listen 80;
  listen [::]:80;
  server_name .stream.test;

  location / {
    return 301 https://stream.test$request_uri;
  }
}
